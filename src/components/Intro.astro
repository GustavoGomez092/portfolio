<section class="intro">
  <div class="lottie-intro-container"></div>
</section>

<script>
  import Lottie from "lottie-web"
  import animation from "../assets/lottie/intro-new.json"
  import gsap from "gsap"
  import { setIntroComplete, $introComplete } from "../stores/introStore"
  import { LifecycleManager } from "../scripts/animationLifecycle.ts"

  const manager = new LifecycleManager()

  const initLottie = () => {
    const lottieContainer = document.querySelector(".lottie-intro-container")
    if (!lottieContainer) return
    const LottieAnimation = Lottie.loadAnimation({
      container: lottieContainer,
      renderer: "svg",
      loop: false,
      autoplay: true,
      animationData: animation,
    })
    LottieAnimation.setSpeed(0.6)

    manager.ctx?.add(() => {
      const logoLeft =
        document.querySelector(".logo-area")?.getBoundingClientRect().left || 0
      gsap
        .timeline()
        .set(".intro", { opacity: 1 })
        .to(lottieContainer, {
          top: window.innerWidth < 1024 ? 15 : 8,
          left: logoLeft - 4,
          delay: 4,
          width: 59,
          height: 59,
          duration: 1,
          onComplete: () => {
            setIntroComplete(true)
          },
        })
        .to(".intro", {
          duration: 1,
          opacity: 0,
          ease: "power4.in",
          onComplete: () => {
            LottieAnimation.destroy()
            const el = document.querySelector(".intro")
            if (el) {
              el.remove()
            }
          },
        })
    })
  }

  manager.onElementLoaded(".intro", async () => {
    if ($introComplete.get()) {
      const el = document.querySelector(".intro")
      if (el) {
        el.remove()
      }
      return
    } else {
      try {
        await import("../assets/lottie/intro-new.json")
        initLottie()
      } catch (error) {
        console.error("Error during Lottie animation initialization:", error)
      }
    }
  })
</script>

<style>
      @reference '../styles/global.css';
  section.intro {
    @apply fixed top-0 left-0 overflow-hidden w-screen h-screen flex items-center justify-center bg-white z-90;
    .lottie-intro-container {
      @apply absolute w-60 h-60;
    }
  }
</style>
